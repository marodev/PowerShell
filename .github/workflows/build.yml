name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: ðŸ”¨ Use .NET Core 3.1.x SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Setup .NET 5
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100-rc.1.20452.10'

      # - name: ðŸª“ **DOTNET HACK** ðŸª“
      #   shell: pwsh
      #   run: |
      #     $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
      #     $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
      #     $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
      #     foreach ($dir in $directories) {
      #       $from = $dir.FullName;
      #       $to = "$root/$version";
      #       Write-Host Copying from $from to $to;
      #       Copy-Item "$from\*" $to -Recurse -Force;
      #     }    
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"marodev_PowerShell" /o:"marodev-github" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          Import-Module .\build.psm1
          Start-PSBootstrap
          # Start-PSBuild
          # dotnet restore
          # dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"